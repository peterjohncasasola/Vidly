@using Vidly.Models
@model Vidly.Models.LoginViewModel
@{
  ViewBag.Title = "Log in";
}

<h3 class="pt-4">@ViewBag.Title.</h3>
<div class="row">
  <div class="col-md-4">
    <section id="loginForm">
      @using (Html.BeginForm("Login", "Account", new { ViewBag.ReturnUrl }, FormMethod.Post, new { autocomplete="off", @class = "form-horizontal", role = "form" }))
      {
        @Html.AntiForgeryToken()
        <h6>Use a local account to log in.</h6>
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
          @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label  my-2" })
          <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-group">
          @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label my-2" })
          <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
          </div>
        </div>
        <div class="form-check my-2">
          @Html.LabelFor(m => m.RememberMe)
          @Html.CheckBoxFor(m => m.RememberMe, new { @class="form-check-input", style= "min-width: 10px !important;" })
        </div>
   
        <div class="form-group">
          <div class="col-md-offset-2 col-md-10 my-2">
            <input type="submit" value="Log in" class="btn btn-sm btn-primary px-3" style="min-width: 10px !important;"/>
            @Html.ActionLink("Register", "Register", new {}, new { @class="btn btn-sm btn-outline-primary ms-1" })
          </div>
        </div>
        
        <p>
          @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>
      }
    </section>
  </div>
  <div class="col-md-4 offset-lg-4">
    <section id="socialLoginForm">
      @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
    </section>
  </div>
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}