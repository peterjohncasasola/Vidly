@using Vidly.Models
@model IEnumerable<Vidly.Models.Movie>

@{
  ViewBag.Title = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="py-2">Movies</h2>
@section styles {
  <style type="text/css">
    .paginate_button {
      padding: 10px !important;
    }

  </style>
}
<p>
  @Html.ActionLink("New Movie", "New", new { }, new { @class = "btn btn-primary" })
</p>
<table class="table table-bordered table-condensed" id="data-table">
  <thead>
    <tr>
      <th>
        Movie
      </th>
      <th>
        Genre
      </th>
      <th>
        Released Date
      </th>
      <th>
        Available
      </th>
      <th></th>
    </tr>
  </thead>

</table>
@section scripts {
  <script type="module">
    import { Helpers } from "../../Scripts/Customs/helpers.js";
    $(document).ready(function () {
    
      let table = $("#data-table")
        .DataTable({
          pageLength: 10,
          recordsTotal: 10,
          start: 1,
          searchDelay: 300,
          page: 0,
          ajax: function (data, callback, settings) {
            let columns = ['Name', 'Genre', 'DateRelease', 'Stock', 'MinimumRequiredAge'];
            const order = data.order[0];

            let params = {
              page: (data.start / data.length) + 1,
              pageSize: data.length,
              searchBy: 'Name',
              search: data.search?.value,
              orderBy: columns[order.column],
              sortBy: columns[order.dir],
            }
            let search = data.search?.value;

            $.ajax({
              url: `/api/movies?${Helpers.setQueryParams(params)}`,
                dataType: 'json',
                type: 'GET',
                success: function (data, textStatus, xhr) {
                  callback({  
                    data: data.data,                      
                    recordsTotal: data.meta.totalItems,
                    recordsFiltered: data.meta.totalItems,
                    start: data.meta.from,
                    end: data.meta.to,
                    page: data.meta.currentPage + 1,
                  });
              }
            });
          },
        processing: true,
          serverSide: true,
        info: true,
        columns: [
          {
            data: "name",
          },
          {
            data: "genre",
          },
          {
            data: "dateRelease",
            render: function (data) {
              return new moment(data).format("MM/DD/yyyy");
            }
          },
          {
            data: "stock",
          },
          {
            data: "id",
            render: function (data) {
              return "<button class='btn btn-danger btn-sm .btn-delete' data-id=" + data + ">Delete</button>";
            }
          },

        ]
        });


      $("#data-table").on("click", ".btn-delete", function () {
        var button = $(this);
        bootbox.confirm("Are you sure you want to delete this movie?", function (result) {
          if (result) {
            $.ajax({
              url: "/api/movies/" + button.attr("data-id"),
              method: "DELETE",
              success: function () {
                toastr.success("Movie deleted successfully.");
                table.row(button.parents("tr")).remove().draw();
              },
              error: function () {
                toastr.error("Something unexpected happened.");
              }
            });
          }
        });
      });

    })

  
  </script>
}


